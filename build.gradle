buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: '1.0.0-M4'
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '1.2.4'
        classpath group: 'com.netflix.nebula', name: 'gradle-ospackage-plugin', version: '4.4.0'
    }
}

plugins {
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

repositories {
    mavenCentral()
    jcenter()
}

ext.junitPlatformVersion = '1.0.0-M4'
ext.junitJupiterVersion  = '5.0.0-M4'
ext.log4jVersion         = '2.7'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "nebula.deb"
apply plugin: 'nebula.rpm'

project.version = '1.0.0-alpha.6'
project.group = 'com.domhauton.membrane'

jar {
    baseName = 'membrane-daemon'
    version = project.version
    manifest {
        attributes 'Implementation-Title': 'Membrane Daemon',
                'Implementation-Version': project.version,
                'Main-Class': project.group + '.Main'
    }
}

task buildDeb(type: Deb) {
    packageName 'membrane'
    version project.version
    release '1'
    maintainer 'Dominic Hauton'
    uploaders 'Dominic Hauton'

    preInstall file('scripts/deb/preInstall.sh')
    postInstall file('scripts/deb/postInstall.sh')
    postUninstall file('scripts/deb/postUninstall.sh')

    requires('default-jre-headless', '>= 1.8').or("default-jre", '>= 1.8')

    into '/usr/share/membrane'

    from('build/libs') {
        into 'lib'
    }

    from('scripts/bin') {
        into 'bin'
        fileMode 0555
    }

    link('/usr/bin/membraned', '/usr/share/membrane/bin/membraned', 555)
    link('/usr/bin/membrane', '/usr/share/membrane/bin/membrane', 555)
    link('/usr/bin/membrane-gui', '/usr/share/membrane/bin/membrane-gui', 555)
}

task buildRpm(type: Rpm) {
    packageName 'membrane'
    version '1.0.0.alpha.5'
    release '1'
    os LINUX
    user 'root'
    permissionGroup 'root'

    preInstall file('scripts/rpm/preInstall.sh')
    postInstall file('scripts/rpm/postInstall.sh')
    postUninstall file('scripts/rpm/postUninstall.sh')

    into '/usr/share/membrane'

    from('build/libs') {
        into 'lib'
    }

    from('scripts/bin') {
        into 'bin'
        fileMode 0555
    }

    link('/usr/bin/membraned', '/usr/share/membrane/bin/membraned', 555)
    link('/usr/bin/membrane', '/usr/share/membrane/bin/membrane', 555)
    link('/usr/bin/membrane-gui', '/usr/share/membrane/bin/membrane-gui', 555)
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

junitPlatform {
    platformVersion '1.0.0-M4'
    filters {
        engines {
            include 'junit-jupiter'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
    }
    reportsDir file('build/test-results')

    enableStandardTestTask false
}

project.afterEvaluate {
    def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

    // configure jacoco to analyze the junitPlatformTest task
    jacoco {
        // this tool version is compatible with
        toolVersion = "0.7.9"
        applyTo junitPlatformTestTask
    }

    // create junit platform jacoco task
    project.task(type: JacocoReport, "junitPlatformJacocoReport",
            {
                sourceDirectories = files("./src/main")
                classDirectories = files("$buildDir/classes/main")
                executionData junitPlatformTestTask

                reports {
                    xml.enabled true
                    xml.destination "${buildDir}/jacoco/report.xml"
                    html.enabled true
                    html.destination "${buildDir}/jacoco/html"
                }

                doLast {
                    println "Jacoco report for client created: file://${reports.xml.destination.toURI().path}"
                }
            })
}

dependencies{
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.0.pr2'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.0.pr2'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    // https://mvnrepository.com/artifact/joda-time/joda-time
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    // https://mvnrepository.com/artifact/io.vertx/vertx-core
    compile group: 'io.vertx', name: 'vertx-core', version: '3.4.1'
    // https://mvnrepository.com/artifact/io.vertx/vertx-web
    compile group: 'io.vertx', name: 'vertx-web', version: '3.4.1'
    // https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.56'
    // https://mvnrepository.com/artifact/org.bouncycastle/bcpkix-jdk15on
    compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.56'
    // https://mvnrepository.com/artifact/org.bitlet/weupnp
    compile group: 'org.bitlet', name: 'weupnp', version: '0.1.4'
    // https://mvnrepository.com/artifact/org.xerial.snappy/snappy-java
    compile group: 'org.xerial.snappy', name: 'snappy-java', version: '1.1.4-M3'
    // https://mvnrepository.com/artifact/net.jpountz.lz4/lz4
    compile group: 'net.jpountz.lz4', name: 'lz4', version: '1.3.0'

    // https://mvnrepository.com/artifact/javax.jmdns/jmdns
    // compile group: 'javax.jmdns', name: 'jmdns', version: '3.4.1'

    // https://mvnrepository.com/artifact/com.google.jimfs/jimfs
    // compile group: 'com.google.jimfs', name: 'jimfs', version: '1.1'

    // https://bintray.com/serce/maven/jnr-fuse
    // compile 'com.github.serceman:jnr-fuse:0.3.1'


    // BUMP NETTY VERSION TO FIX BUG FOR VERTX

    // https://mvnrepository.com/artifact/io.netty
    compile group: 'io.netty', name: 'netty-common', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-buffer', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-transport', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-handler', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-handler-proxy', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-codec-http', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-codec-http2', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-resolver', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-resolver-dns', version: '4.1.9.Final'
    compile group: 'io.netty', name: 'netty-handler-proxy', version: '4.1.9.Final'
}

dependencies {
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0-M4'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0-M4'
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-gradle-plugin
    testCompile group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: '1.0.0-M4'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.7.22'
    // https://mvnrepository.com/artifact/io.vertx/vertx-codegen
    testCompile group: 'io.vertx', name: 'vertx-codegen', version: '3.4.1'
}

buildConfig {
    appName = project.name          // sets value of NAME field
    version = project.version       // sets value of VERSION field
    packageName = project.group
    clsName = 'MembraneBuild'       // sets the name of the BuildConfig class
}